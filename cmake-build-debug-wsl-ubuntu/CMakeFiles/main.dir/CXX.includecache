#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

/mnt/d/work/lexer0/src/bit_flagger.hpp
vector
-
algorithm
-
string
-

/mnt/d/work/lexer0/src/dfa.hpp
utility
-
vector
-
queue
-
map
-
set
-
type_traits
-
string
-
bit_flagger.hpp
/mnt/d/work/lexer0/src/bit_flagger.hpp

/mnt/d/work/lexer0/src/main.cpp
t_lexer.h
/mnt/d/work/lexer0/src/t_lexer.h
t_reg_expr.hpp
/mnt/d/work/lexer0/src/t_reg_expr.hpp
reg_expr.hpp
/mnt/d/work/lexer0/src/reg_expr.hpp
nfa.hpp
/mnt/d/work/lexer0/src/nfa.hpp
string
-
iostream
-
map
-
queue
-

/mnt/d/work/lexer0/src/nfa.hpp
vector
-
queue
-
map
-
set
-
numeric
-
bit_flagger.hpp
/mnt/d/work/lexer0/src/bit_flagger.hpp
dfa.hpp
/mnt/d/work/lexer0/src/dfa.hpp

/mnt/d/work/lexer0/src/reg_expr.hpp
type_traits
-
cassert
-
nfa.hpp
/mnt/d/work/lexer0/src/nfa.hpp

/mnt/d/work/lexer0/src/t_lexer.h
t_reg_expr.hpp
/mnt/d/work/lexer0/src/t_reg_expr.hpp
token.hpp
/mnt/d/work/lexer0/src/token.hpp

/mnt/d/work/lexer0/src/t_reg_expr.hpp
functional
-
nfa.hpp
/mnt/d/work/lexer0/src/nfa.hpp

/mnt/d/work/lexer0/src/token.hpp
tuple
-
string
-

